// Generated from scanner\SDecaf.g by ANTLR 4.4

	package compiler.scanner;
	import java.util.*;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class SDecaf extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		WHITESPACE=1, COMMENT=2, BOOL_TRUE=3, BOOL_FALSE=4, KW_IF=5, KW_BOOLEAN=6, 
		KW_BREAK=7, KW_CALLOUT=8, KW_CONTINUE=9, KW_ELSE=10, KW_FALSE=11, KW_FOR=12, 
		KW_WHILE=13, KW_INT=14, KW_RETURN=15, KW_TRUE=16, KW_VOID=17, STRING=18, 
		ERR1_CHAR=19, ERR2_CHAR=20, CHAR=21, ERR3_CHAR=22, ERR4_CHAR=23, ERR5_CHAR=24, 
		INT=25, HEX=26, ERR_HEX=27, ID=28, QUOTE=29, BSLASH=30, PYC=31, LSBRACKET=32, 
		RSBRACKET=33, LCBRACKET=34, RCBRACKET=35, COMMA=36, PA=37, PC=38, NO=39, 
		PLUS=40, DIV=41, MULT=42, RES=43, PRCNT=44, AND=45, OR=46, POT=47, IG=48, 
		DIG=49, PLUS_IG=50, MIN_IG=51, MAYOR=52, MENOR=53, MAYORIGUAL=54, MENORIGUAL=55, 
		NOIGUAL=56;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", 
		"'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", "'0'", "'1'", 
		"'2'", "'3'", "'4'", "'5'", "'6'", "'7'", "'8'"
	};
	public static final String[] ruleNames = {
		"WHITESPACE", "COMMENT", "BOOL_TRUE", "BOOL_FALSE", "KW_IF", "KW_BOOLEAN", 
		"KW_BREAK", "KW_CALLOUT", "KW_CONTINUE", "KW_ELSE", "KW_FALSE", "KW_FOR", 
		"KW_WHILE", "KW_INT", "KW_RETURN", "KW_TRUE", "KW_VOID", "STRING", "ERR1_CHAR", 
		"ERR2_CHAR", "CHAR", "ERR3_CHAR", "AUXERROR3", "ERR4_CHAR", "ERR5_CHAR", 
		"INT", "HEX", "ERR_HEX", "ID", "QUOTE", "BSLASH", "PYC", "LSBRACKET", 
		"RSBRACKET", "LCBRACKET", "RCBRACKET", "COMMA", "PA", "PC", "NO", "PLUS", 
		"DIV", "MULT", "RES", "PRCNT", "AND", "OR", "POT", "IG", "DIG", "PLUS_IG", 
		"MIN_IG", "MAYOR", "MENOR", "MAYORIGUAL", "MENORIGUAL", "NOIGUAL"
	};


	public SDecaf(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "SDecaf.g"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	@Override
	public void action(RuleContext _localctx, int ruleIndex, int actionIndex) {
		switch (ruleIndex) {
		case 0: WHITESPACE_action((RuleContext)_localctx, actionIndex); break;
		case 1: COMMENT_action((RuleContext)_localctx, actionIndex); break;
		}
	}
	private void WHITESPACE_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 0: skip(); break;
		}
	}
	private void COMMENT_action(RuleContext _localctx, int actionIndex) {
		switch (actionIndex) {
		case 1: skip(); break;
		}
	}

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2:\u0176\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\3\2\6\2w\n\2\r\2\16"+
		"\2x\3\2\3\2\3\3\3\3\3\3\3\3\7\3\u0081\n\3\f\3\16\3\u0084\13\3\3\3\5\3"+
		"\u0087\n\3\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6"+
		"\3\6\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\b\3\t\3\t\3"+
		"\t\3\t\3\t\3\t\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3"+
		"\13\3\13\3\13\3\f\3\f\3\f\3\f\3\f\3\f\3\r\3\r\3\r\3\r\3\16\3\16\3\16\3"+
		"\16\3\16\3\16\3\17\3\17\3\17\3\17\3\20\3\20\3\20\3\20\3\20\3\20\3\20\3"+
		"\21\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3"+
		"\23\3\23\3\23\7\23\u00e9\n\23\f\23\16\23\u00ec\13\23\3\23\3\23\3\24\3"+
		"\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25\3\26\3\26\3\26\3\26\3\26\3\26\3"+
		"\26\3\26\3\26\3\26\5\26\u0103\n\26\3\26\3\26\3\27\3\27\3\27\6\27\u010a"+
		"\n\27\r\27\16\27\u010b\3\27\3\27\3\30\3\30\3\31\3\31\3\31\3\31\3\32\3"+
		"\32\3\32\3\32\3\32\3\33\5\33\u011c\n\33\3\33\6\33\u011f\n\33\r\33\16\33"+
		"\u0120\3\34\3\34\3\34\3\34\6\34\u0127\n\34\r\34\16\34\u0128\3\35\3\35"+
		"\3\35\3\36\5\36\u012f\n\36\3\36\7\36\u0132\n\36\f\36\16\36\u0135\13\36"+
		"\3\37\3\37\3 \3 \3!\3!\3\"\3\"\3#\3#\3$\3$\3%\3%\3&\3&\3\'\3\'\3(\3(\3"+
		")\3)\3*\3*\3+\3+\3,\3,\3-\3-\3.\3.\3/\3/\3/\3\60\3\60\3\60\3\61\3\61\3"+
		"\62\3\62\3\63\3\63\3\63\3\64\3\64\3\64\3\65\3\65\3\65\3\66\3\66\3\67\3"+
		"\67\38\38\38\39\39\39\3:\3:\3:\2\2;\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n"+
		"\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30"+
		"/\2\61\31\63\32\65\33\67\349\35;\36=\37? A!C\"E#G$I%K&M\'O(Q)S*U+W,Y-"+
		"[.]/_\60a\61c\62e\63g\64i\65k\66m\67o8q9s:\3\2\13\5\2\13\f\17\17\"\"\3"+
		"\2\f\f\4\2\13\13^^\6\2$$^^ppvv\6\2\"\"$$))^^\3\2))\5\2\62;CHch\5\2C\\"+
		"aac|\6\2\62;C\\aac|\u0184\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2\2\2\t\3\2"+
		"\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23\3\2\2\2\2"+
		"\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2\2\2\2\37\3"+
		"\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2\2\2\2+\3\2"+
		"\2\2\2-\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\2"+
		"9\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3"+
		"\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2"+
		"\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2"+
		"_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3"+
		"\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\3v\3\2\2\2\5|\3\2\2"+
		"\2\7\u008a\3\2\2\2\t\u008f\3\2\2\2\13\u0095\3\2\2\2\r\u0098\3\2\2\2\17"+
		"\u00a0\3\2\2\2\21\u00a6\3\2\2\2\23\u00ae\3\2\2\2\25\u00b7\3\2\2\2\27\u00bc"+
		"\3\2\2\2\31\u00c2\3\2\2\2\33\u00c6\3\2\2\2\35\u00cc\3\2\2\2\37\u00d0\3"+
		"\2\2\2!\u00d7\3\2\2\2#\u00dc\3\2\2\2%\u00e1\3\2\2\2\'\u00ef\3\2\2\2)\u00f3"+
		"\3\2\2\2+\u00f8\3\2\2\2-\u0106\3\2\2\2/\u010f\3\2\2\2\61\u0111\3\2\2\2"+
		"\63\u0115\3\2\2\2\65\u011b\3\2\2\2\67\u0122\3\2\2\29\u012a\3\2\2\2;\u012e"+
		"\3\2\2\2=\u0136\3\2\2\2?\u0138\3\2\2\2A\u013a\3\2\2\2C\u013c\3\2\2\2E"+
		"\u013e\3\2\2\2G\u0140\3\2\2\2I\u0142\3\2\2\2K\u0144\3\2\2\2M\u0146\3\2"+
		"\2\2O\u0148\3\2\2\2Q\u014a\3\2\2\2S\u014c\3\2\2\2U\u014e\3\2\2\2W\u0150"+
		"\3\2\2\2Y\u0152\3\2\2\2[\u0154\3\2\2\2]\u0156\3\2\2\2_\u0159\3\2\2\2a"+
		"\u015c\3\2\2\2c\u015e\3\2\2\2e\u0160\3\2\2\2g\u0163\3\2\2\2i\u0166\3\2"+
		"\2\2k\u0169\3\2\2\2m\u016b\3\2\2\2o\u016d\3\2\2\2q\u0170\3\2\2\2s\u0173"+
		"\3\2\2\2uw\t\2\2\2vu\3\2\2\2wx\3\2\2\2xv\3\2\2\2xy\3\2\2\2yz\3\2\2\2z"+
		"{\b\2\2\2{\4\3\2\2\2|}\7\61\2\2}~\7\61\2\2~\u0082\3\2\2\2\177\u0081\n"+
		"\3\2\2\u0080\177\3\2\2\2\u0081\u0084\3\2\2\2\u0082\u0080\3\2\2\2\u0082"+
		"\u0083\3\2\2\2\u0083\u0086\3\2\2\2\u0084\u0082\3\2\2\2\u0085\u0087\7\f"+
		"\2\2\u0086\u0085\3\2\2\2\u0086\u0087\3\2\2\2\u0087\u0088\3\2\2\2\u0088"+
		"\u0089\b\3\3\2\u0089\6\3\2\2\2\u008a\u008b\7v\2\2\u008b\u008c\7t\2\2\u008c"+
		"\u008d\7w\2\2\u008d\u008e\7g\2\2\u008e\b\3\2\2\2\u008f\u0090\7h\2\2\u0090"+
		"\u0091\7c\2\2\u0091\u0092\7n\2\2\u0092\u0093\7u\2\2\u0093\u0094\7g\2\2"+
		"\u0094\n\3\2\2\2\u0095\u0096\7k\2\2\u0096\u0097\7h\2\2\u0097\f\3\2\2\2"+
		"\u0098\u0099\7d\2\2\u0099\u009a\7q\2\2\u009a\u009b\7q\2\2\u009b\u009c"+
		"\7n\2\2\u009c\u009d\7g\2\2\u009d\u009e\7c\2\2\u009e\u009f\7p\2\2\u009f"+
		"\16\3\2\2\2\u00a0\u00a1\7d\2\2\u00a1\u00a2\7t\2\2\u00a2\u00a3\7g\2\2\u00a3"+
		"\u00a4\7c\2\2\u00a4\u00a5\7m\2\2\u00a5\20\3\2\2\2\u00a6\u00a7\7e\2\2\u00a7"+
		"\u00a8\7c\2\2\u00a8\u00a9\7n\2\2\u00a9\u00aa\7n\2\2\u00aa\u00ab\7q\2\2"+
		"\u00ab\u00ac\7w\2\2\u00ac\u00ad\7v\2\2\u00ad\22\3\2\2\2\u00ae\u00af\7"+
		"e\2\2\u00af\u00b0\7q\2\2\u00b0\u00b1\7p\2\2\u00b1\u00b2\7v\2\2\u00b2\u00b3"+
		"\7k\2\2\u00b3\u00b4\7p\2\2\u00b4\u00b5\7w\2\2\u00b5\u00b6\7g\2\2\u00b6"+
		"\24\3\2\2\2\u00b7\u00b8\7g\2\2\u00b8\u00b9\7n\2\2\u00b9\u00ba\7u\2\2\u00ba"+
		"\u00bb\7g\2\2\u00bb\26\3\2\2\2\u00bc\u00bd\7h\2\2\u00bd\u00be\7c\2\2\u00be"+
		"\u00bf\7n\2\2\u00bf\u00c0\7u\2\2\u00c0\u00c1\7g\2\2\u00c1\30\3\2\2\2\u00c2"+
		"\u00c3\7h\2\2\u00c3\u00c4\7q\2\2\u00c4\u00c5\7t\2\2\u00c5\32\3\2\2\2\u00c6"+
		"\u00c7\7y\2\2\u00c7\u00c8\7j\2\2\u00c8\u00c9\7k\2\2\u00c9\u00ca\7n\2\2"+
		"\u00ca\u00cb\7g\2\2\u00cb\34\3\2\2\2\u00cc\u00cd\7k\2\2\u00cd\u00ce\7"+
		"p\2\2\u00ce\u00cf\7v\2\2\u00cf\36\3\2\2\2\u00d0\u00d1\7t\2\2\u00d1\u00d2"+
		"\7g\2\2\u00d2\u00d3\7v\2\2\u00d3\u00d4\7w\2\2\u00d4\u00d5\7t\2\2\u00d5"+
		"\u00d6\7p\2\2\u00d6 \3\2\2\2\u00d7\u00d8\7v\2\2\u00d8\u00d9\7t\2\2\u00d9"+
		"\u00da\7w\2\2\u00da\u00db\7g\2\2\u00db\"\3\2\2\2\u00dc\u00dd\7x\2\2\u00dd"+
		"\u00de\7q\2\2\u00de\u00df\7k\2\2\u00df\u00e0\7f\2\2\u00e0$\3\2\2\2\u00e1"+
		"\u00ea\7$\2\2\u00e2\u00e9\n\3\2\2\u00e3\u00e4\7^\2\2\u00e4\u00e9\7)\2"+
		"\2\u00e5\u00e6\7^\2\2\u00e6\u00e9\7$\2\2\u00e7\u00e9\t\4\2\2\u00e8\u00e2"+
		"\3\2\2\2\u00e8\u00e3\3\2\2\2\u00e8\u00e5\3\2\2\2\u00e8\u00e7\3\2\2\2\u00e9"+
		"\u00ec\3\2\2\2\u00ea\u00e8\3\2\2\2\u00ea\u00eb\3\2\2\2\u00eb\u00ed\3\2"+
		"\2\2\u00ec\u00ea\3\2\2\2\u00ed\u00ee\7$\2\2\u00ee&\3\2\2\2\u00ef\u00f0"+
		"\7)\2\2\u00f0\u00f1\7)\2\2\u00f1\u00f2\7)\2\2\u00f2(\3\2\2\2\u00f3\u00f4"+
		"\7)\2\2\u00f4\u00f5\7^\2\2\u00f5\u00f6\n\5\2\2\u00f6\u00f7\7)\2\2\u00f7"+
		"*\3\2\2\2\u00f8\u0102\7)\2\2\u00f9\u0103\n\6\2\2\u00fa\u00fb\7^\2\2\u00fb"+
		"\u0103\7p\2\2\u00fc\u00fd\7^\2\2\u00fd\u0103\7v\2\2\u00fe\u00ff\7^\2\2"+
		"\u00ff\u0103\7^\2\2\u0100\u0101\7^\2\2\u0101\u0103\7$\2\2\u0102\u00f9"+
		"\3\2\2\2\u0102\u00fa\3\2\2\2\u0102\u00fc\3\2\2\2\u0102\u00fe\3\2\2\2\u0102"+
		"\u0100\3\2\2\2\u0103\u0104\3\2\2\2\u0104\u0105\7)\2\2\u0105,\3\2\2\2\u0106"+
		"\u0107\7)\2\2\u0107\u0109\n\7\2\2\u0108\u010a\5/\30\2\u0109\u0108\3\2"+
		"\2\2\u010a\u010b\3\2\2\2\u010b\u0109\3\2\2\2\u010b\u010c\3\2\2\2\u010c"+
		"\u010d\3\2\2\2\u010d\u010e\7)\2\2\u010e.\3\2\2\2\u010f\u0110\n\7\2\2\u0110"+
		"\60\3\2\2\2\u0111\u0112\7)\2\2\u0112\u0113\7$\2\2\u0113\u0114\7)\2\2\u0114"+
		"\62\3\2\2\2\u0115\u0116\7)\2\2\u0116\u0117\7^\2\2\u0117\u0118\7)\2\2\u0118"+
		"\u0119\7\f\2\2\u0119\64\3\2\2\2\u011a\u011c\7/\2\2\u011b\u011a\3\2\2\2"+
		"\u011b\u011c\3\2\2\2\u011c\u011e\3\2\2\2\u011d\u011f\4\62;\2\u011e\u011d"+
		"\3\2\2\2\u011f\u0120\3\2\2\2\u0120\u011e\3\2\2\2\u0120\u0121\3\2\2\2\u0121"+
		"\66\3\2\2\2\u0122\u0123\7\62\2\2\u0123\u0124\7z\2\2\u0124\u0126\3\2\2"+
		"\2\u0125\u0127\t\b\2\2\u0126\u0125\3\2\2\2\u0127\u0128\3\2\2\2\u0128\u0126"+
		"\3\2\2\2\u0128\u0129\3\2\2\2\u01298\3\2\2\2\u012a\u012b\7\62\2\2\u012b"+
		"\u012c\7z\2\2\u012c:\3\2\2\2\u012d\u012f\t\t\2\2\u012e\u012d\3\2\2\2\u012f"+
		"\u0133\3\2\2\2\u0130\u0132\t\n\2\2\u0131\u0130\3\2\2\2\u0132\u0135\3\2"+
		"\2\2\u0133\u0131\3\2\2\2\u0133\u0134\3\2\2\2\u0134<\3\2\2\2\u0135\u0133"+
		"\3\2\2\2\u0136\u0137\7$\2\2\u0137>\3\2\2\2\u0138\u0139\7^\2\2\u0139@\3"+
		"\2\2\2\u013a\u013b\7=\2\2\u013bB\3\2\2\2\u013c\u013d\7]\2\2\u013dD\3\2"+
		"\2\2\u013e\u013f\7_\2\2\u013fF\3\2\2\2\u0140\u0141\7}\2\2\u0141H\3\2\2"+
		"\2\u0142\u0143\7\177\2\2\u0143J\3\2\2\2\u0144\u0145\7.\2\2\u0145L\3\2"+
		"\2\2\u0146\u0147\7*\2\2\u0147N\3\2\2\2\u0148\u0149\7+\2\2\u0149P\3\2\2"+
		"\2\u014a\u014b\7#\2\2\u014bR\3\2\2\2\u014c\u014d\7-\2\2\u014dT\3\2\2\2"+
		"\u014e\u014f\7\61\2\2\u014fV\3\2\2\2\u0150\u0151\7,\2\2\u0151X\3\2\2\2"+
		"\u0152\u0153\7/\2\2\u0153Z\3\2\2\2\u0154\u0155\7\'\2\2\u0155\\\3\2\2\2"+
		"\u0156\u0157\7(\2\2\u0157\u0158\7(\2\2\u0158^\3\2\2\2\u0159\u015a\7~\2"+
		"\2\u015a\u015b\7~\2\2\u015b`\3\2\2\2\u015c\u015d\7`\2\2\u015db\3\2\2\2"+
		"\u015e\u015f\7?\2\2\u015fd\3\2\2\2\u0160\u0161\7?\2\2\u0161\u0162\7?\2"+
		"\2\u0162f\3\2\2\2\u0163\u0164\7-\2\2\u0164\u0165\7?\2\2\u0165h\3\2\2\2"+
		"\u0166\u0167\7/\2\2\u0167\u0168\7?\2\2\u0168j\3\2\2\2\u0169\u016a\7@\2"+
		"\2\u016al\3\2\2\2\u016b\u016c\7>\2\2\u016cn\3\2\2\2\u016d\u016e\7@\2\2"+
		"\u016e\u016f\7?\2\2\u016fp\3\2\2\2\u0170\u0171\7>\2\2\u0171\u0172\7?\2"+
		"\2\u0172r\3\2\2\2\u0173\u0174\7#\2\2\u0174\u0175\7?\2\2\u0175t\3\2\2\2"+
		"\20\2x\u0082\u0086\u00e8\u00ea\u0102\u010b\u011b\u0120\u0128\u012e\u0131"+
		"\u0133\4\3\2\2\3\3\3";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}